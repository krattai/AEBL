This document describes how XtreemFS metadata in the MRC is mapped to BabuDB
database indices.


1  VERSIONING
==============================================================================

The current version of the MRC is stored in a database named 'V'. There is
only one index containing a single key-value pair (numbers indicate entry
sizes in bytes):

VERSION (BabuDB index #0)

 The version index only contains one key-value pair that indicates the current
 version of the database.
|----------------------------------------------------------------------------|
|key   | version                                                             |
|      | 1 ('v')                                                             |
|----------------------------------------------------------------------------|
|value | currentVersionNumber                                                |
|      | 4                                                                   |
|----------------------------------------------------------------------------|


2  FILE SYSTEM METADATA
==============================================================================

File system metadata of a volume is stored in a BabuDB database with the name
of the volume ID. The following indices exist, with the following types (the
numbers define different value types):

FILE_INDEX        XATTR_INDEX     FILE_ID_INDEX
--------------    -------------   -------------------
atime        0    XAttrs          parentID + fileName
ctime        0    
mtime        0    
size         0
type         1
id           1
permissions  1    ACL_INDEX       LAST_ID_INDEX
linkCount    1    ----------      ------------------
epoch        1    ACLEntries      lastAssignedFileID
issuedEpoch  1    
readOnlyFlag 1
fileName     1
owner        1
group        1
xLocList     1


Indices are structured as follows (numbers indicate entry sizes in bytes):

 FILE_INDEX (BabuDB index #0)
 
 The file index stores the primary metadata of a file or directory. This
 encapsulates most of the metadata returned by the 'stat' system call. To
 reduce the size of log entries, metadata has been grouped according to their
 types: type-0 metadata reflects frequently-changed metadata like time stamps
 and the file size, while less frequently-changed metadata like access
 permissions and ownership are defined as type-1 metadata. X-Locations lists
 which are frequently accessed w/ I/O operations but rarely changed are
 defined as type-3 metadata. Each such type has its own key in the index.
|----------------------------------------------------------------------------|
|key   | parentID   filename         type                                    |
|      | 8          var              1                                       |
|----------------------------------------------------------------------------|
|value | frequentlyChangedMetadata                                           |
|type=0| 20 (files), 12 (directories)                                        |
|----------------------------------------------------------------------------|
|value | rarelyChangedMetadata                                               |
|type=1| var (files & directories), 9 (link targets)                         |
|----------------------------------------------------------------------------|


 XATTR_INDEX (BabuDB index #1)
 
 The extended attribute index contains any user-defined extended attributes
 assigned to files or directories. Softlink targets and default striping
 policies are mapped to extended attributes
|----------------------------------------------------------------------------|
|key   | fileID   hash(owner)   hash(attrKey)   collisionCount               |
|      | 8        4             4               2                            |
|----------------------------------------------------------------------------|
|value | keyOffset  valueOffset  attrOwner  attrKey  attrValue               |
|      | 2          2            var        var      var                     |
|----------------------------------------------------------------------------|


 ACL_INDEX (BabuDB index #2)
 
 The ACL index stores optional access control lists for files.
|----------------------------------------------------------------------------|
|key   | fileID   entityName                                                 |
|      | 8        var                                                        |
|----------------------------------------------------------------------------|
|value | rights                                                              |
|      | 2                                                                   |
|----------------------------------------------------------------------------|


 FILE_ID_INDEX (BabuDB index #3)
 
 The file ID index is used to retrieve file metadata by means of its ID. It
 may either map a file ID to a key in the file index, or directly to the three
 different types of primary file metadata (i.e. types 0-1). The former kind of
 mapping is used to retrieve file metadata by means of file IDs, which is
 necessary with some operations that provide a file ID instead of a path. The
 latter sort of mapping is used to retrieve a file's metadata if the file is
 referenced by multiple hard links (type 2). In this case, the file's entries
 in the file index map to the corresponding prefix key in the file ID index. 
|----------------------------------------------------------------------------|
|key   | fileID    type                                                      |
|      | 8         1                                                         |
|----------------------------------------------------------------------------|
|value | frequentlyChangedMetadata                                           |
|type=0| 20 (files), 12 (directories)                                        |
|----------------------------------------------------------------------------|
|value | rarelyChangedMetadata                                               |
|type=1| var                                                                 |
|----------------------------------------------------------------------------|
|value | parentID  fileName                                                  |
|type=2| 8         var                                                       |
|----------------------------------------------------------------------------|


VOLUME_INDEX (BabuDB index #4)
  
 The 'VOLUME_INDEX' index stores single key-value pairs that contain volume-
 related information, including the last ID  assigned to a file, the current
 number of files and directories in the volume, as well as the current size of
 the volume in bytes. 
|----------------------------------------------------------------------------|
|key   | type                                                                |
|      | 1  (one of {'i', 's', 'f', 'd'})                                    |
|----------------------------------------------------------------------------|
|value | longValue                                                           |
|      | 8                                                                   |
|----------------------------------------------------------------------------|


Complex data types are mapped as follows:


frequentlyChangedMetadata - comprises file/directory metadata that is
                            frequently changed
                            
 files:
|----------------------------------------------------------------------------|
|atime   ctime   mtime   size                                                |
|4       4       4       8                                                   |
|----------------------------------------------------------------------------|

 directories:
|----------------------------------------------------------------------------|
|atime   ctime   mtime                                                       |
|4       4       4                                                           |
|----------------------------------------------------------------------------|


rarelyChangedMetadata - comprises file/directory metadata that is rarely
                        changed
                        
 files:
|----------------------------------------------------------------------------|
|type  id  permissions  linkCount  w32attrs  epoch  issuedEpoch  readOnlyFlag|
|1     8   4            2          8         4      4            1           |
|                                                                            |
|groupOffset  xLocOffset  owner  group  xLocList                             |
|2            2           var    var    var                                  |
|----------------------------------------------------------------------------|

 directories:
|----------------------------------------------------------------------------|
|type  id   permissions  linkCount  w32attrs  groupOffset  owner  group      |
|1     8    4            2          8         2            var    var        |
|----------------------------------------------------------------------------|

 link targets:
|----------------------------------------------------------------------------|
|type  id                                                                    |
|1     8                                                                     |
|----------------------------------------------------------------------------|


xLocList - represents an X-Locations list of a file
|----------------------------------------------------------------------------|
|version  numReplicas  replUpdPolOffs  repl1Offs ... replNOffs               |
|4        4            4               4             4                       |
|                                                                            |
|xLoc1  ...  xLocN    replUpdPol                                             |
|var         var      var                                                    |
|----------------------------------------------------------------------------|

xLoc - represents a single replica in an X-Locations list
|----------------------------------------------------------------------------|
|osdListOffset  replFlags  stripingPolicy  numOSDs  osd1ofs  ...  osdnofs    |
|2              4          var             2        2             2          |
|                                                                            |
|osd1  ...  osdn                                                             |
|var        var                                                              |
|----------------------------------------------------------------------------|

stripingPolicy - represents a striping policy
|----------------------------------------------------------------------------|
|stripeSize    width    pattern                                              |
|4             4        var                                                  |
|----------------------------------------------------------------------------|
