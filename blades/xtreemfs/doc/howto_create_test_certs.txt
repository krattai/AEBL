(parts taken from http://marc.info/?l=tomcat-user&m=106293430225790&w=2)

use "passphrase" for all passwords!

SETTING UP YOUR CA
-----------------------------------

Step 1.  Go to www.openssl.org and download the source code.  Even Windows
users need to build it, so you'll need access to a C compiler.  You may be
able to get hold of prebuilt binaries on the web and you can certainly get
hold of the GNU C compiler or you can use Borland and Microsoft compilers.
There are good build instructions included with the source distribution, so
I won't go into build details.

Step 2.  Create directories to hold your CA keys, your server keys and, if
you want to use SSL client authentication, your client keys.  For the sake
of argument let's assume that these directories are called "ca",
"server" and "client".

Step 3.  Create a private key and certificate request for your own CA:
openssl req -new -newkey rsa:1024 -nodes -out ca/ca.csr -keyout
ca/ca.key

Step 4.  Create your CA's self-signed certificate (note lasts one year -
increase the days setting to whatever you want):
openssl x509 -trustout -signkey ca/ca.key -days 365 -req -in ca/ca.csr -out ca/ca.pem


Step 5.  Import the CA certificate into the JDK certificate authorities
keystore:
keytool -import -keystore trust.jks -file ca/ca.pem -alias ca

Step 6.  Create a file to hold your CA's serial numbers.  This file starts
with the number "2":
echo "02" > ca/ca.srl


SETTING UP THE CLIENT CERT
------------------------------------

keytool -genkey -alias client -keyalg RSA -keysize 1024 -keystore client.jsk -storetype JKS

keytool -certreq -keyalg RSA -alias client -file client/client.csr -keystore client.jks

openssl x509 -CA ca/ca.pem -CAkey ca/ca.key -CAserial ca/ca.srl -req -in client/client.csr -out client/client.crt -days 365

keytool -import -alias ca -keystore client.jsk -trustcacerts -file ca/ca.pem

keytool -import -alias client -keystore client.jsk -trustcacerts -file client/client.crt


SETTING UP THE SERVER CERT
---------------------------------------

openssl req -new -newkey rsa:1024 -nodes -out server/server.req -keyout server/server.key

openssl x509 -CA ca/ca.pem -CAkey ca/ca.key -CAserial ca/ca.srl -req -in server/server.req -out server/server.pem -days 365

openssl pkcs12 -export -in server/server.pem -inkey server/server.key -out server/server.p12 -name "server"
(SET export passphrase to "passphrase"!)

SETTING UP THE XtreemFS AL client Cert
---------------------------------------

openssl req -new -newkey rsa:1024 -nodes -out al/al.req -keyout al/al.key

openssl x509 -CA ca/ca.pem -CAkey ca/ca.key -CAserial ca/ca.srl -req -in al/al.req -out al/al.pem -days 365

openssl pkcs12 -export -in al/al.pem -inkey al/al.key -out al/al.p12 -name "al"
(SET export passphrase to "passphrase"!)