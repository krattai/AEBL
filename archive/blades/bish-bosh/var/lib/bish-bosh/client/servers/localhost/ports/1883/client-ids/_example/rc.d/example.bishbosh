#!/usr/bin/env bish-bosh
# If being used as above (ie executable, chmod +x CONNACK.bishbosh), then we can also set configuration, eg
#bishbosh_server=test.mosquitto.org
#bishbosh_clientId=example

#bishbosh_connect_cleanSession=0
bishbosh_connect_willTopic='X'
bishbosh_connect_willMessage='goodbye'
#bishbosh_connect_willMessageFilePath
bishbosh_connect_willQoS=1
bishbosh_connect_willRetain=1
bishbosh_connect_keepAlive=5
#bishbosh_connect_username=user
#bishbosh_connect_password=password
#bishbosh_connect_passwordFilePath

bishbosh_connection_handler_CONNACK()
{
	# Set up some subscriptions... another implementation could read from a standard file
	bishbosh_subscribe \
		'/topic/qos/0' 0 \
		'/topic/qos/1' 1 \
		'/topic/qos/3' 1 \
		'a/b' 2
	
	# Make sure we're not subscribed to what we don't want here, too - again, we could read from a file
	bishbosh_unsubscribe \
		'/topic/not/wanted' \
		'/and/also/topic/not/wanted'
	
	# Publish a QoS 0 message
	# On topic a/b
	# Unretained
	# With value 'X'
	bishbosh_publishText 0 'a/b' no 'hello world'
	
	# Publish a QoS 1 message
	# On topic a/b
	# Unretained
	# Using the contents of file '/path/to/message'
	bishbosh_publishText 1 'a/b' no 'hello qos 1'
	
	# Publish a QoS 2 message
	# On topic a/b
	# Retained
	# Using the contents of file '/path/to/message/to/remove/after/send'
	# Then remove '/path/to/message/to/remove/after/send' after send (QoS 2 takes a copy)
	bishbosh_publishText 2 'a/b' no 'hello qos 2'
}
